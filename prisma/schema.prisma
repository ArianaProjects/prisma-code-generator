generator custom_generator {
  provider = "node -r ts-node/register src/index.ts"
  output   = "../gen"
  config   = "conf.json"
}

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  email         String   @unique @db.VarChar(255)
  firstName     String   @db.VarChar(255)
  lastName      String   @db.VarChar(255)
  age           DateTime @db.Date
  mainAddressId Int      @unique
  insurance     Boolean  @default(false)

  Phones             Phone[]
  Addresses          Address[]
  NotificationTokens NotificationTokens[]
}

model Phone {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  number           String  @db.VarChar(31)
  verified         Boolean
  verificationCode String  @db.VarChar(8)

  User   User   @relation(fields: [userId], references: [id])
  userId String
}

model Address {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  recipientName String               @db.VarChar(255)
  line1         String               @db.VarChar(255)
  line2         String               @db.VarChar(255)
  city          String               @db.VarChar(255)
  countryCode   String               @default("DE") @db.VarChar(2)
  postalCode    String               @db.VarChar(15)
  description   String               @db.VarChar(255)
  state         String               @db.VarChar(255)
  point         Unsupported("point")

  User   User   @relation(fields: [userId], references: [id])
  userId String @db.VarChar(255)
}

model NotificationTokens {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  token String

  User   User   @relation(fields: [userId], references: [id])
  userId String
}
